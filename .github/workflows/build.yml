name: Build

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-
            ${{ runner.os }}-node-

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: 'po-translator-gui/src-tauri -> target'

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        working-directory: ./po-translator-gui
        run: npm ci

      - name: Build Tauri app
        working-directory: ./po-translator-gui
        run: npm run tauri build

      - name: Debug - List Windows build output
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          Write-Host "Listing target/release/bundle directory:"
          if (Test-Path "src-tauri/target/release/bundle") {
            Get-ChildItem -Path "src-tauri/target/release/bundle" -Recurse | Select-Object FullName
          } else {
            Write-Host "Bundle directory does not exist"
          }

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: po-translator-windows
          path: |
            po-translator-gui/src-tauri/target/release/bundle/msi/*.msi
            po-translator-gui/src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: warn
          retention-days: 30

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: po-translator-macos
          path: |
            po-translator-gui/src-tauri/target/release/bundle/dmg/*.dmg
            po-translator-gui/src-tauri/target/release/bundle/macos/*.app
          retention-days: 30

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: po-translator-linux
          path: |
            po-translator-gui/src-tauri/target/release/bundle/deb/*.deb
            po-translator-gui/src-tauri/target/release/bundle/appimage/*.AppImage
          retention-days: 30
